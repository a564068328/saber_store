package com.icloud.wrzjh.base.net.socket.packet;

public class BufferEncrypt {
	public static int[] sendMap = new int[256];
	public static int[] recvMap = new int[256];

	static {
		try {
			sendMap[0] = (0x70);
			sendMap[1] = (0x2F);
			sendMap[2] = (0x40);
			sendMap[3] = (0x5F);
			sendMap[4] = (0x44);
			sendMap[5] = (0x8E);
			sendMap[6] = (0x6E);
			sendMap[7] = (0x45);
			sendMap[8] = (0x7E);
			sendMap[9] = (0xAB);
			sendMap[10] = (0x2C);
			sendMap[11] = (0x1F);
			sendMap[12] = (0xB4);
			sendMap[13] = (0xAC);
			sendMap[14] = (0x9D);
			sendMap[15] = (0x91);
			sendMap[16] = (0x0D);
			sendMap[17] = (0x36);
			sendMap[18] = (0x9B);
			sendMap[19] = (0x0B);
			sendMap[20] = (0xD4);
			sendMap[21] = (0xC4);
			sendMap[22] = (0x39);
			sendMap[23] = (0x74);
			sendMap[24] = (0xBF);
			sendMap[25] = (0x23);
			sendMap[26] = (0x16);
			sendMap[27] = (0x14);
			sendMap[28] = (0x06);
			sendMap[29] = (0xEB);
			sendMap[30] = (0x04);
			sendMap[31] = (0x3E);
			sendMap[32] = (0x12);
			sendMap[33] = (0x5C);
			sendMap[34] = (0x8B);
			sendMap[35] = (0xBC);
			sendMap[36] = (0x61);
			sendMap[37] = (0x63);
			sendMap[38] = (0xF6);
			sendMap[39] = (0xA5);
			sendMap[40] = (0xE1);
			sendMap[41] = (0x65);
			sendMap[42] = (0xD8);
			sendMap[43] = (0xF5);
			sendMap[44] = (0x5A);
			sendMap[45] = (0x07);
			sendMap[46] = (0xF0);
			sendMap[47] = (0x13);
			sendMap[48] = (0xF2);
			sendMap[49] = (0x20);
			sendMap[50] = (0x6B);
			sendMap[51] = (0x4A);
			sendMap[52] = (0x24);
			sendMap[53] = (0x59);
			sendMap[54] = (0x89);
			sendMap[55] = (0x64);
			sendMap[56] = (0xD7);
			sendMap[57] = (0x42);
			sendMap[58] = (0x6A);
			sendMap[59] = (0x5E);
			sendMap[60] = (0x3D);
			sendMap[61] = (0x0A);
			sendMap[62] = (0x77);
			sendMap[63] = (0xE0);
			sendMap[64] = (0x80);
			sendMap[65] = (0x27);
			sendMap[66] = (0xB8);
			sendMap[67] = (0xC5);
			sendMap[68] = (0x8C);
			sendMap[69] = (0x0E);
			sendMap[70] = (0xFA);
			sendMap[71] = (0x8A);
			sendMap[72] = (0xD5);
			sendMap[73] = (0x29);
			sendMap[74] = (0x56);
			sendMap[75] = (0x57);
			sendMap[76] = (0x6C);
			sendMap[77] = (0x53);
			sendMap[78] = (0x67);
			sendMap[79] = (0x41);
			sendMap[80] = (0xE8);
			sendMap[81] = (0x00);
			sendMap[82] = (0x1A);
			sendMap[83] = (0xCE);
			sendMap[84] = (0x86);
			sendMap[85] = (0x83);
			sendMap[86] = (0xB0);
			sendMap[87] = (0x22);
			sendMap[88] = (0x28);
			sendMap[89] = (0x4D);
			sendMap[90] = (0x3F);
			sendMap[91] = (0x26);
			sendMap[92] = (0x46);
			sendMap[93] = (0x4F);
			sendMap[94] = (0x6F);
			sendMap[95] = (0x2B);
			sendMap[96] = (0x72);
			sendMap[97] = (0x3A);
			sendMap[98] = (0xF1);
			sendMap[99] = (0x8D);
			sendMap[100] = (0x97);
			sendMap[101] = (0x95);
			sendMap[102] = (0x49);
			sendMap[103] = (0x84);
			sendMap[104] = (0xE5);
			sendMap[105] = (0xE3);
			sendMap[106] = (0x79);
			sendMap[107] = (0x8F);
			sendMap[108] = (0x51);
			sendMap[109] = (0x10);
			sendMap[110] = (0xA8);
			sendMap[111] = (0x82);
			sendMap[112] = (0xC6);
			sendMap[113] = (0xDD);
			sendMap[114] = (0xFF);
			sendMap[115] = (0xFC);
			sendMap[116] = (0xE4);
			sendMap[117] = (0xCF);
			sendMap[118] = (0xB3);
			sendMap[119] = (0x09);
			sendMap[120] = (0x5D);
			sendMap[121] = (0xEA);
			sendMap[122] = (0x9C);
			sendMap[123] = (0x34);
			sendMap[124] = (0xF9);
			sendMap[125] = (0x17);
			sendMap[126] = (0x9F);
			sendMap[127] = (0xDA);
			sendMap[128] = (0x87);
			sendMap[129] = (0xF8);
			sendMap[130] = (0x15);
			sendMap[131] = (0x05);
			sendMap[132] = (0x3C);
			sendMap[133] = (0xD3);
			sendMap[134] = (0xA4);
			sendMap[135] = (0x85);
			sendMap[136] = (0x2E);
			sendMap[137] = (0xFB);
			sendMap[138] = (0xEE);
			sendMap[139] = (0x47);
			sendMap[140] = (0x3B);
			sendMap[141] = (0xEF);
			sendMap[142] = (0x37);
			sendMap[143] = (0x7F);
			sendMap[144] = (0x93);
			sendMap[145] = (0xAF);
			sendMap[146] = (0x69);
			sendMap[147] = (0x0C);
			sendMap[148] = (0x71);
			sendMap[149] = (0x31);
			sendMap[150] = (0xDE);
			sendMap[151] = (0x21);
			sendMap[152] = (0x75);
			sendMap[153] = (0xA0);
			sendMap[154] = (0xAA);
			sendMap[155] = (0xBA);
			sendMap[156] = (0x7C);
			sendMap[157] = (0x38);
			sendMap[158] = (0x02);
			sendMap[159] = (0xB7);
			sendMap[160] = (0x81);
			sendMap[161] = (0x01);
			sendMap[162] = (0xFD);
			sendMap[163] = (0xE7);
			sendMap[164] = (0x1D);
			sendMap[165] = (0xCC);
			sendMap[166] = (0xCD);
			sendMap[167] = (0xBD);
			sendMap[168] = (0x1B);
			sendMap[169] = (0x7A);
			sendMap[170] = (0x2A);
			sendMap[171] = (0xAD);
			sendMap[172] = (0x66);
			sendMap[173] = (0xBE);
			sendMap[174] = (0x55);
			sendMap[175] = (0x33);
			sendMap[176] = (0x03);
			sendMap[177] = (0xDB);
			sendMap[178] = (0x88);
			sendMap[179] = (0xB2);
			sendMap[180] = (0x1E);
			sendMap[181] = (0x4E);
			sendMap[182] = (0xB9);
			sendMap[183] = (0xE6);
			sendMap[184] = (0xC2);
			sendMap[185] = (0xF7);
			sendMap[186] = (0xCB);
			sendMap[187] = (0x7D);
			sendMap[188] = (0xC9);
			sendMap[189] = (0x62);
			sendMap[190] = (0xC3);
			sendMap[191] = (0xA6);
			sendMap[192] = (0xDC);
			sendMap[193] = (0xA7);
			sendMap[194] = (0x50);
			sendMap[195] = (0xB5);
			sendMap[196] = (0x4B);
			sendMap[197] = (0x94);
			sendMap[198] = (0xC0);
			sendMap[199] = (0x92);
			sendMap[200] = (0x4C);
			sendMap[201] = (0x11);
			sendMap[202] = (0x5B);
			sendMap[203] = (0x78);
			sendMap[204] = (0xD9);
			sendMap[205] = (0xB1);
			sendMap[206] = (0xED);
			sendMap[207] = (0x19);
			sendMap[208] = (0xE9);
			sendMap[209] = (0xA1);
			sendMap[210] = (0x1C);
			sendMap[211] = (0xB6);
			sendMap[212] = (0x32);
			sendMap[213] = (0x99);
			sendMap[214] = (0xA3);
			sendMap[215] = (0x76);
			sendMap[216] = (0x9E);
			sendMap[217] = (0x7B);
			sendMap[218] = (0x6D);
			sendMap[219] = (0x9A);
			sendMap[220] = (0x30);
			sendMap[221] = (0xD6);
			sendMap[222] = (0xA9);
			sendMap[223] = (0x25);
			sendMap[224] = (0xC7);
			sendMap[225] = (0xAE);
			sendMap[226] = (0x96);
			sendMap[227] = (0x35);
			sendMap[228] = (0xD0);
			sendMap[229] = (0xBB);
			sendMap[230] = (0xD2);
			sendMap[231] = (0xC8);
			sendMap[232] = (0xA2);
			sendMap[233] = (0x08);
			sendMap[234] = (0xF3);
			sendMap[235] = (0xD1);
			sendMap[236] = (0x73);
			sendMap[237] = (0xF4);
			sendMap[238] = (0x48);
			sendMap[239] = (0x2D);
			sendMap[240] = (0x90);
			sendMap[241] = (0xCA);
			sendMap[242] = (0xE2);
			sendMap[243] = (0x58);
			sendMap[244] = (0xC1);
			sendMap[245] = (0x18);
			sendMap[246] = (0x52);
			sendMap[247] = (0xFE);
			sendMap[248] = (0xDF);
			sendMap[249] = (0x68);
			sendMap[250] = (0x98);
			sendMap[251] = (0x54);
			sendMap[252] = (0xEC);
			sendMap[253] = (0x60);
			sendMap[254] = (0x43);
			sendMap[255] = (0x0F);

			recvMap[0] = (0x51);
			recvMap[1] = (0xA1);
			recvMap[2] = (0x9E);
			recvMap[3] = (0xB0);
			recvMap[4] = (0x1E);
			recvMap[5] = (0x83);
			recvMap[6] = (0x1C);
			recvMap[7] = (0x2D);
			recvMap[8] = (0xE9);
			recvMap[9] = (0x77);
			recvMap[10] = (0x3D);
			recvMap[11] = (0x13);
			recvMap[12] = (0x93);
			recvMap[13] = (0x10);
			recvMap[14] = (0x45);
			recvMap[15] = (0xFF);
			recvMap[16] = (0x6D);
			recvMap[17] = (0xC9);
			recvMap[18] = (0x20);
			recvMap[19] = (0x2F);
			recvMap[20] = (0x1B);
			recvMap[21] = (0x82);
			recvMap[22] = (0x1A);
			recvMap[23] = (0x7D);
			recvMap[24] = (0xF5);
			recvMap[25] = (0xCF);
			recvMap[26] = (0x52);
			recvMap[27] = (0xA8);
			recvMap[28] = (0xD2);
			recvMap[29] = (0xA4);
			recvMap[30] = (0xB4);
			recvMap[31] = (0x0B);
			recvMap[32] = (0x31);
			recvMap[33] = (0x97);
			recvMap[34] = (0x57);
			recvMap[35] = (0x19);
			recvMap[36] = (0x34);
			recvMap[37] = (0xDF);
			recvMap[38] = (0x5B);
			recvMap[39] = (0x41);
			recvMap[40] = (0x58);
			recvMap[41] = (0x49);
			recvMap[42] = (0xAA);
			recvMap[43] = (0x5F);
			recvMap[44] = (0x0A);
			recvMap[45] = (0xEF);
			recvMap[46] = (0x88);
			recvMap[47] = (0x01);
			recvMap[48] = (0xDC);
			recvMap[49] = (0x95);
			recvMap[50] = (0xD4);
			recvMap[51] = (0xAF);
			recvMap[52] = (0x7B);
			recvMap[53] = (0xE3);
			recvMap[54] = (0x11);
			recvMap[55] = (0x8E);
			recvMap[56] = (0x9D);
			recvMap[57] = (0x16);
			recvMap[58] = (0x61);
			recvMap[59] = (0x8C);
			recvMap[60] = (0x84);
			recvMap[61] = (0x3C);
			recvMap[62] = (0x1F);
			recvMap[63] = (0x5A);
			recvMap[64] = (0x02);
			recvMap[65] = (0x4F);
			recvMap[66] = (0x39);
			recvMap[67] = (0xFE);
			recvMap[68] = (0x04);
			recvMap[69] = (0x07);
			recvMap[70] = (0x5C);
			recvMap[71] = (0x8B);
			recvMap[72] = (0xEE);
			recvMap[73] = (0x66);
			recvMap[74] = (0x33);
			recvMap[75] = (0xC4);
			recvMap[76] = (0xC8);
			recvMap[77] = (0x59);
			recvMap[78] = (0xB5);
			recvMap[79] = (0x5D);
			recvMap[80] = (0xC2);
			recvMap[81] = (0x6C);
			recvMap[82] = (0xF6);
			recvMap[83] = (0x4D);
			recvMap[84] = (0xFB);
			recvMap[85] = (0xAE);
			recvMap[86] = (0x4A);
			recvMap[87] = (0x4B);
			recvMap[88] = (0xF3);
			recvMap[89] = (0x35);
			recvMap[90] = (0x2C);
			recvMap[91] = (0xCA);
			recvMap[92] = (0x21);
			recvMap[93] = (0x78);
			recvMap[94] = (0x3B);
			recvMap[95] = (0x03);
			recvMap[96] = (0xFD);
			recvMap[97] = (0x24);
			recvMap[98] = (0xBD);
			recvMap[99] = (0x25);
			recvMap[100] = (0x37);
			recvMap[101] = (0x29);
			recvMap[102] = (0xAC);
			recvMap[103] = (0x4E);
			recvMap[104] = (0xF9);
			recvMap[105] = (0x92);
			recvMap[106] = (0x3A);
			recvMap[107] = (0x32);
			recvMap[108] = (0x4C);
			recvMap[109] = (0xDA);
			recvMap[110] = (0x06);
			recvMap[111] = (0x5E);
			recvMap[112] = (0x00);
			recvMap[113] = (0x94);
			recvMap[114] = (0x60);
			recvMap[115] = (0xEC);
			recvMap[116] = (0x17);
			recvMap[117] = (0x98);
			recvMap[118] = (0xD7);
			recvMap[119] = (0x3E);
			recvMap[120] = (0xCB);
			recvMap[121] = (0x6A);
			recvMap[122] = (0xA9);
			recvMap[123] = (0xD9);
			recvMap[124] = (0x9C);
			recvMap[125] = (0xBB);
			recvMap[126] = (0x08);
			recvMap[127] = (0x8F);
			recvMap[128] = (0x40);
			recvMap[129] = (0xA0);
			recvMap[130] = (0x6F);
			recvMap[131] = (0x55);
			recvMap[132] = (0x67);
			recvMap[133] = (0x87);
			recvMap[134] = (0x54);
			recvMap[135] = (0x80);
			recvMap[136] = (0xB2);
			recvMap[137] = (0x36);
			recvMap[138] = (0x47);
			recvMap[139] = (0x22);
			recvMap[140] = (0x44);
			recvMap[141] = (0x63);
			recvMap[142] = (0x05);
			recvMap[143] = (0x6B);
			recvMap[144] = (0xF0);
			recvMap[145] = (0x0F);
			recvMap[146] = (0xC7);
			recvMap[147] = (0x90);
			recvMap[148] = (0xC5);
			recvMap[149] = (0x65);
			recvMap[150] = (0xE2);
			recvMap[151] = (0x64);
			recvMap[152] = (0xFA);
			recvMap[153] = (0xD5);
			recvMap[154] = (0xDB);
			recvMap[155] = (0x12);
			recvMap[156] = (0x7A);
			recvMap[157] = (0x0E);
			recvMap[158] = (0xD8);
			recvMap[159] = (0x7E);
			recvMap[160] = (0x99);
			recvMap[161] = (0xD1);
			recvMap[162] = (0xE8);
			recvMap[163] = (0xD6);
			recvMap[164] = (0x86);
			recvMap[165] = (0x27);
			recvMap[166] = (0xBF);
			recvMap[167] = (0xC1);
			recvMap[168] = (0x6E);
			recvMap[169] = (0xDE);
			recvMap[170] = (0x9A);
			recvMap[171] = (0x09);
			recvMap[172] = (0x0D);
			recvMap[173] = (0xAB);
			recvMap[174] = (0xE1);
			recvMap[175] = (0x91);
			recvMap[176] = (0x56);
			recvMap[177] = (0xCD);
			recvMap[178] = (0xB3);
			recvMap[179] = (0x76);
			recvMap[180] = (0x0C);
			recvMap[181] = (0xC3);
			recvMap[182] = (0xD3);
			recvMap[183] = (0x9F);
			recvMap[184] = (0x42);
			recvMap[185] = (0xB6);
			recvMap[186] = (0x9B);
			recvMap[187] = (0xE5);
			recvMap[188] = (0x23);
			recvMap[189] = (0xA7);
			recvMap[190] = (0xAD);
			recvMap[191] = (0x18);
			recvMap[192] = (0xC6);
			recvMap[193] = (0xF4);
			recvMap[194] = (0xB8);
			recvMap[195] = (0xBE);
			recvMap[196] = (0x15);
			recvMap[197] = (0x43);
			recvMap[198] = (0x70);
			recvMap[199] = (0xE0);
			recvMap[200] = (0xE7);
			recvMap[201] = (0xBC);
			recvMap[202] = (0xF1);
			recvMap[203] = (0xBA);
			recvMap[204] = (0xA5);
			recvMap[205] = (0xA6);
			recvMap[206] = (0x53);
			recvMap[207] = (0x75);
			recvMap[208] = (0xE4);
			recvMap[209] = (0xEB);
			recvMap[210] = (0xE6);
			recvMap[211] = (0x85);
			recvMap[212] = (0x14);
			recvMap[213] = (0x48);
			recvMap[214] = (0xDD);
			recvMap[215] = (0x38);
			recvMap[216] = (0x2A);
			recvMap[217] = (0xCC);
			recvMap[218] = (0x7F);
			recvMap[219] = (0xB1);
			recvMap[220] = (0xC0);
			recvMap[221] = (0x71);
			recvMap[222] = (0x96);
			recvMap[223] = (0xF8);
			recvMap[224] = (0x3F);
			recvMap[225] = (0x28);
			recvMap[226] = (0xF2);
			recvMap[227] = (0x69);
			recvMap[228] = (0x74);
			recvMap[229] = (0x68);
			recvMap[230] = (0xB7);
			recvMap[231] = (0xA3);
			recvMap[232] = (0x50);
			recvMap[233] = (0xD0);
			recvMap[234] = (0x79);
			recvMap[235] = (0x1D);
			recvMap[236] = (0xFC);
			recvMap[237] = (0xCE);
			recvMap[238] = (0x8A);
			recvMap[239] = (0x8D);
			recvMap[240] = (0x2E);
			recvMap[241] = (0x62);
			recvMap[242] = (0x30);
			recvMap[243] = (0xEA);
			recvMap[244] = (0xED);
			recvMap[245] = (0x2B);
			recvMap[246] = (0x26);
			recvMap[247] = (0xB9);
			recvMap[248] = (0x81);
			recvMap[249] = (0x7C);
			recvMap[250] = (0x46);
			recvMap[251] = (0x89);
			recvMap[252] = (0x73);
			recvMap[253] = (0xA2);
			recvMap[254] = (0xF7);
			recvMap[255] = (0x72);
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

	public static int EncryptBuffer(byte[] b, int nbegin, int wDataSize,
			int[] sendMap) {

		int cbCheckCode = 0;
		try {
			for (int i = nbegin; i < wDataSize; i++) {
				cbCheckCode += toUnsign(b[i]);
				b[i] = (byte) MapSendByte(b[i], sendMap);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
		return cbCheckCode = ~cbCheckCode + 1;
	}

	public static int CrevasseBuffer(byte[] b, int nbegin, int wDataSize,
			int cbCheckCode, int[] recvMap) {
		try {
			for (int i = nbegin; i < wDataSize; i++) {
				b[i] = (byte) MapRecvByte(b[i], recvMap);
				cbCheckCode += toUnsign(b[i]);
				cbCheckCode /= 256;
			}
			return cbCheckCode;
		} catch (Exception e) {
			e.printStackTrace();
		}
		return 0;
	}

	public static int MapSendByte(int cbData, int[] sendMap) {
		try {
			cbData = toUnsign(cbData);
			return sendMap[cbData];
		} catch (Exception e) {
			e.printStackTrace();
		}
		return 0;
	}

	public static int MapRecvByte(int cbData, int[] recvMap) {
		try {
			cbData = toUnsign(cbData);
			return recvMap[cbData];
		} catch (Exception e) {
			e.printStackTrace();
		}
		return 0;
	}

	public static int toUnsign(int oldByte) {
		try {
			int ret = 0;
			byte b = (byte) oldByte;
			byte c = 0;
			c = (byte) (b & 0x7f);
			if (b < 0) {
				ret = 128;
			}
			return ret + c;
		} catch (Exception e) {
			e.printStackTrace();
		}
		return 0;
	}
}
