package com.icloud.wrzjh.base.utils;

public class BufferEncrypt {
	public static int[] m_SendByteMap = new int[256];
	public static int[] m_RecvByteMap = new int[256];

	static {
		try {
			m_SendByteMap[0] = (0x70);
			m_SendByteMap[1] = (0x2F);
			m_SendByteMap[2] = (0x40);
			m_SendByteMap[3] = (0x5F);
			m_SendByteMap[4] = (0x44);
			m_SendByteMap[5] = (0x8E);
			m_SendByteMap[6] = (0x6E);
			m_SendByteMap[7] = (0x45);
			m_SendByteMap[8] = (0x7E);
			m_SendByteMap[9] = (0xAB);
			m_SendByteMap[10] = (0x2C);
			m_SendByteMap[11] = (0x1F);
			m_SendByteMap[12] = (0xB4);
			m_SendByteMap[13] = (0xAC);
			m_SendByteMap[14] = (0x9D);
			m_SendByteMap[15] = (0x91);
			m_SendByteMap[16] = (0x0D);
			m_SendByteMap[17] = (0x36);
			m_SendByteMap[18] = (0x9B);
			m_SendByteMap[19] = (0x0B);
			m_SendByteMap[20] = (0xD4);
			m_SendByteMap[21] = (0xC4);
			m_SendByteMap[22] = (0x39);
			m_SendByteMap[23] = (0x74);
			m_SendByteMap[24] = (0xBF);
			m_SendByteMap[25] = (0x23);
			m_SendByteMap[26] = (0x16);
			m_SendByteMap[27] = (0x14);
			m_SendByteMap[28] = (0x06);
			m_SendByteMap[29] = (0xEB);
			m_SendByteMap[30] = (0x04);
			m_SendByteMap[31] = (0x3E);
			m_SendByteMap[32] = (0x12);
			m_SendByteMap[33] = (0x5C);
			m_SendByteMap[34] = (0x8B);
			m_SendByteMap[35] = (0xBC);
			m_SendByteMap[36] = (0x61);
			m_SendByteMap[37] = (0x63);
			m_SendByteMap[38] = (0xF6);
			m_SendByteMap[39] = (0xA5);
			m_SendByteMap[40] = (0xE1);
			m_SendByteMap[41] = (0x65);
			m_SendByteMap[42] = (0xD8);
			m_SendByteMap[43] = (0xF5);
			m_SendByteMap[44] = (0x5A);
			m_SendByteMap[45] = (0x07);
			m_SendByteMap[46] = (0xF0);
			m_SendByteMap[47] = (0x13);
			m_SendByteMap[48] = (0xF2);
			m_SendByteMap[49] = (0x20);
			m_SendByteMap[50] = (0x6B);
			m_SendByteMap[51] = (0x4A);
			m_SendByteMap[52] = (0x24);
			m_SendByteMap[53] = (0x59);
			m_SendByteMap[54] = (0x89);
			m_SendByteMap[55] = (0x64);
			m_SendByteMap[56] = (0xD7);
			m_SendByteMap[57] = (0x42);
			m_SendByteMap[58] = (0x6A);
			m_SendByteMap[59] = (0x5E);
			m_SendByteMap[60] = (0x3D);
			m_SendByteMap[61] = (0x0A);
			m_SendByteMap[62] = (0x77);
			m_SendByteMap[63] = (0xE0);
			m_SendByteMap[64] = (0x80);
			m_SendByteMap[65] = (0x27);
			m_SendByteMap[66] = (0xB8);
			m_SendByteMap[67] = (0xC5);
			m_SendByteMap[68] = (0x8C);
			m_SendByteMap[69] = (0x0E);
			m_SendByteMap[70] = (0xFA);
			m_SendByteMap[71] = (0x8A);
			m_SendByteMap[72] = (0xD5);
			m_SendByteMap[73] = (0x29);
			m_SendByteMap[74] = (0x56);
			m_SendByteMap[75] = (0x57);
			m_SendByteMap[76] = (0x6C);
			m_SendByteMap[77] = (0x53);
			m_SendByteMap[78] = (0x67);
			m_SendByteMap[79] = (0x41);
			m_SendByteMap[80] = (0xE8);
			m_SendByteMap[81] = (0x00);
			m_SendByteMap[82] = (0x1A);
			m_SendByteMap[83] = (0xCE);
			m_SendByteMap[84] = (0x86);
			m_SendByteMap[85] = (0x83);
			m_SendByteMap[86] = (0xB0);
			m_SendByteMap[87] = (0x22);
			m_SendByteMap[88] = (0x28);
			m_SendByteMap[89] = (0x4D);
			m_SendByteMap[90] = (0x3F);
			m_SendByteMap[91] = (0x26);
			m_SendByteMap[92] = (0x46);
			m_SendByteMap[93] = (0x4F);
			m_SendByteMap[94] = (0x6F);
			m_SendByteMap[95] = (0x2B);
			m_SendByteMap[96] = (0x72);
			m_SendByteMap[97] = (0x3A);
			m_SendByteMap[98] = (0xF1);
			m_SendByteMap[99] = (0x8D);
			m_SendByteMap[100] = (0x97);
			m_SendByteMap[101] = (0x95);
			m_SendByteMap[102] = (0x49);
			m_SendByteMap[103] = (0x84);
			m_SendByteMap[104] = (0xE5);
			m_SendByteMap[105] = (0xE3);
			m_SendByteMap[106] = (0x79);
			m_SendByteMap[107] = (0x8F);
			m_SendByteMap[108] = (0x51);
			m_SendByteMap[109] = (0x10);
			m_SendByteMap[110] = (0xA8);
			m_SendByteMap[111] = (0x82);
			m_SendByteMap[112] = (0xC6);
			m_SendByteMap[113] = (0xDD);
			m_SendByteMap[114] = (0xFF);
			m_SendByteMap[115] = (0xFC);
			m_SendByteMap[116] = (0xE4);
			m_SendByteMap[117] = (0xCF);
			m_SendByteMap[118] = (0xB3);
			m_SendByteMap[119] = (0x09);
			m_SendByteMap[120] = (0x5D);
			m_SendByteMap[121] = (0xEA);
			m_SendByteMap[122] = (0x9C);
			m_SendByteMap[123] = (0x34);
			m_SendByteMap[124] = (0xF9);
			m_SendByteMap[125] = (0x17);
			m_SendByteMap[126] = (0x9F);
			m_SendByteMap[127] = (0xDA);
			m_SendByteMap[128] = (0x87);
			m_SendByteMap[129] = (0xF8);
			m_SendByteMap[130] = (0x15);
			m_SendByteMap[131] = (0x05);
			m_SendByteMap[132] = (0x3C);
			m_SendByteMap[133] = (0xD3);
			m_SendByteMap[134] = (0xA4);
			m_SendByteMap[135] = (0x85);
			m_SendByteMap[136] = (0x2E);
			m_SendByteMap[137] = (0xFB);
			m_SendByteMap[138] = (0xEE);
			m_SendByteMap[139] = (0x47);
			m_SendByteMap[140] = (0x3B);
			m_SendByteMap[141] = (0xEF);
			m_SendByteMap[142] = (0x37);
			m_SendByteMap[143] = (0x7F);
			m_SendByteMap[144] = (0x93);
			m_SendByteMap[145] = (0xAF);
			m_SendByteMap[146] = (0x69);
			m_SendByteMap[147] = (0x0C);
			m_SendByteMap[148] = (0x71);
			m_SendByteMap[149] = (0x31);
			m_SendByteMap[150] = (0xDE);
			m_SendByteMap[151] = (0x21);
			m_SendByteMap[152] = (0x75);
			m_SendByteMap[153] = (0xA0);
			m_SendByteMap[154] = (0xAA);
			m_SendByteMap[155] = (0xBA);
			m_SendByteMap[156] = (0x7C);
			m_SendByteMap[157] = (0x38);
			m_SendByteMap[158] = (0x02);
			m_SendByteMap[159] = (0xB7);
			m_SendByteMap[160] = (0x81);
			m_SendByteMap[161] = (0x01);
			m_SendByteMap[162] = (0xFD);
			m_SendByteMap[163] = (0xE7);
			m_SendByteMap[164] = (0x1D);
			m_SendByteMap[165] = (0xCC);
			m_SendByteMap[166] = (0xCD);
			m_SendByteMap[167] = (0xBD);
			m_SendByteMap[168] = (0x1B);
			m_SendByteMap[169] = (0x7A);
			m_SendByteMap[170] = (0x2A);
			m_SendByteMap[171] = (0xAD);
			m_SendByteMap[172] = (0x66);
			m_SendByteMap[173] = (0xBE);
			m_SendByteMap[174] = (0x55);
			m_SendByteMap[175] = (0x33);
			m_SendByteMap[176] = (0x03);
			m_SendByteMap[177] = (0xDB);
			m_SendByteMap[178] = (0x88);
			m_SendByteMap[179] = (0xB2);
			m_SendByteMap[180] = (0x1E);
			m_SendByteMap[181] = (0x4E);
			m_SendByteMap[182] = (0xB9);
			m_SendByteMap[183] = (0xE6);
			m_SendByteMap[184] = (0xC2);
			m_SendByteMap[185] = (0xF7);
			m_SendByteMap[186] = (0xCB);
			m_SendByteMap[187] = (0x7D);
			m_SendByteMap[188] = (0xC9);
			m_SendByteMap[189] = (0x62);
			m_SendByteMap[190] = (0xC3);
			m_SendByteMap[191] = (0xA6);
			m_SendByteMap[192] = (0xDC);
			m_SendByteMap[193] = (0xA7);
			m_SendByteMap[194] = (0x50);
			m_SendByteMap[195] = (0xB5);
			m_SendByteMap[196] = (0x4B);
			m_SendByteMap[197] = (0x94);
			m_SendByteMap[198] = (0xC0);
			m_SendByteMap[199] = (0x92);
			m_SendByteMap[200] = (0x4C);
			m_SendByteMap[201] = (0x11);
			m_SendByteMap[202] = (0x5B);
			m_SendByteMap[203] = (0x78);
			m_SendByteMap[204] = (0xD9);
			m_SendByteMap[205] = (0xB1);
			m_SendByteMap[206] = (0xED);
			m_SendByteMap[207] = (0x19);
			m_SendByteMap[208] = (0xE9);
			m_SendByteMap[209] = (0xA1);
			m_SendByteMap[210] = (0x1C);
			m_SendByteMap[211] = (0xB6);
			m_SendByteMap[212] = (0x32);
			m_SendByteMap[213] = (0x99);
			m_SendByteMap[214] = (0xA3);
			m_SendByteMap[215] = (0x76);
			m_SendByteMap[216] = (0x9E);
			m_SendByteMap[217] = (0x7B);
			m_SendByteMap[218] = (0x6D);
			m_SendByteMap[219] = (0x9A);
			m_SendByteMap[220] = (0x30);
			m_SendByteMap[221] = (0xD6);
			m_SendByteMap[222] = (0xA9);
			m_SendByteMap[223] = (0x25);
			m_SendByteMap[224] = (0xC7);
			m_SendByteMap[225] = (0xAE);
			m_SendByteMap[226] = (0x96);
			m_SendByteMap[227] = (0x35);
			m_SendByteMap[228] = (0xD0);
			m_SendByteMap[229] = (0xBB);
			m_SendByteMap[230] = (0xD2);
			m_SendByteMap[231] = (0xC8);
			m_SendByteMap[232] = (0xA2);
			m_SendByteMap[233] = (0x08);
			m_SendByteMap[234] = (0xF3);
			m_SendByteMap[235] = (0xD1);
			m_SendByteMap[236] = (0x73);
			m_SendByteMap[237] = (0xF4);
			m_SendByteMap[238] = (0x48);
			m_SendByteMap[239] = (0x2D);
			m_SendByteMap[240] = (0x90);
			m_SendByteMap[241] = (0xCA);
			m_SendByteMap[242] = (0xE2);
			m_SendByteMap[243] = (0x58);
			m_SendByteMap[244] = (0xC1);
			m_SendByteMap[245] = (0x18);
			m_SendByteMap[246] = (0x52);
			m_SendByteMap[247] = (0xFE);
			m_SendByteMap[248] = (0xDF);
			m_SendByteMap[249] = (0x68);
			m_SendByteMap[250] = (0x98);
			m_SendByteMap[251] = (0x54);
			m_SendByteMap[252] = (0xEC);
			m_SendByteMap[253] = (0x60);
			m_SendByteMap[254] = (0x43);
			m_SendByteMap[255] = (0x0F);

			m_RecvByteMap[0] = (0x51);
			m_RecvByteMap[1] = (0xA1);
			m_RecvByteMap[2] = (0x9E);
			m_RecvByteMap[3] = (0xB0);
			m_RecvByteMap[4] = (0x1E);
			m_RecvByteMap[5] = (0x83);
			m_RecvByteMap[6] = (0x1C);
			m_RecvByteMap[7] = (0x2D);
			m_RecvByteMap[8] = (0xE9);
			m_RecvByteMap[9] = (0x77);
			m_RecvByteMap[10] = (0x3D);
			m_RecvByteMap[11] = (0x13);
			m_RecvByteMap[12] = (0x93);
			m_RecvByteMap[13] = (0x10);
			m_RecvByteMap[14] = (0x45);
			m_RecvByteMap[15] = (0xFF);
			m_RecvByteMap[16] = (0x6D);
			m_RecvByteMap[17] = (0xC9);
			m_RecvByteMap[18] = (0x20);
			m_RecvByteMap[19] = (0x2F);
			m_RecvByteMap[20] = (0x1B);
			m_RecvByteMap[21] = (0x82);
			m_RecvByteMap[22] = (0x1A);
			m_RecvByteMap[23] = (0x7D);
			m_RecvByteMap[24] = (0xF5);
			m_RecvByteMap[25] = (0xCF);
			m_RecvByteMap[26] = (0x52);
			m_RecvByteMap[27] = (0xA8);
			m_RecvByteMap[28] = (0xD2);
			m_RecvByteMap[29] = (0xA4);
			m_RecvByteMap[30] = (0xB4);
			m_RecvByteMap[31] = (0x0B);
			m_RecvByteMap[32] = (0x31);
			m_RecvByteMap[33] = (0x97);
			m_RecvByteMap[34] = (0x57);
			m_RecvByteMap[35] = (0x19);
			m_RecvByteMap[36] = (0x34);
			m_RecvByteMap[37] = (0xDF);
			m_RecvByteMap[38] = (0x5B);
			m_RecvByteMap[39] = (0x41);
			m_RecvByteMap[40] = (0x58);
			m_RecvByteMap[41] = (0x49);
			m_RecvByteMap[42] = (0xAA);
			m_RecvByteMap[43] = (0x5F);
			m_RecvByteMap[44] = (0x0A);
			m_RecvByteMap[45] = (0xEF);
			m_RecvByteMap[46] = (0x88);
			m_RecvByteMap[47] = (0x01);
			m_RecvByteMap[48] = (0xDC);
			m_RecvByteMap[49] = (0x95);
			m_RecvByteMap[50] = (0xD4);
			m_RecvByteMap[51] = (0xAF);
			m_RecvByteMap[52] = (0x7B);
			m_RecvByteMap[53] = (0xE3);
			m_RecvByteMap[54] = (0x11);
			m_RecvByteMap[55] = (0x8E);
			m_RecvByteMap[56] = (0x9D);
			m_RecvByteMap[57] = (0x16);
			m_RecvByteMap[58] = (0x61);
			m_RecvByteMap[59] = (0x8C);
			m_RecvByteMap[60] = (0x84);
			m_RecvByteMap[61] = (0x3C);
			m_RecvByteMap[62] = (0x1F);
			m_RecvByteMap[63] = (0x5A);
			m_RecvByteMap[64] = (0x02);
			m_RecvByteMap[65] = (0x4F);
			m_RecvByteMap[66] = (0x39);
			m_RecvByteMap[67] = (0xFE);
			m_RecvByteMap[68] = (0x04);
			m_RecvByteMap[69] = (0x07);
			m_RecvByteMap[70] = (0x5C);
			m_RecvByteMap[71] = (0x8B);
			m_RecvByteMap[72] = (0xEE);
			m_RecvByteMap[73] = (0x66);
			m_RecvByteMap[74] = (0x33);
			m_RecvByteMap[75] = (0xC4);
			m_RecvByteMap[76] = (0xC8);
			m_RecvByteMap[77] = (0x59);
			m_RecvByteMap[78] = (0xB5);
			m_RecvByteMap[79] = (0x5D);
			m_RecvByteMap[80] = (0xC2);
			m_RecvByteMap[81] = (0x6C);
			m_RecvByteMap[82] = (0xF6);
			m_RecvByteMap[83] = (0x4D);
			m_RecvByteMap[84] = (0xFB);
			m_RecvByteMap[85] = (0xAE);
			m_RecvByteMap[86] = (0x4A);
			m_RecvByteMap[87] = (0x4B);
			m_RecvByteMap[88] = (0xF3);
			m_RecvByteMap[89] = (0x35);
			m_RecvByteMap[90] = (0x2C);
			m_RecvByteMap[91] = (0xCA);
			m_RecvByteMap[92] = (0x21);
			m_RecvByteMap[93] = (0x78);
			m_RecvByteMap[94] = (0x3B);
			m_RecvByteMap[95] = (0x03);
			m_RecvByteMap[96] = (0xFD);
			m_RecvByteMap[97] = (0x24);
			m_RecvByteMap[98] = (0xBD);
			m_RecvByteMap[99] = (0x25);
			m_RecvByteMap[100] = (0x37);
			m_RecvByteMap[101] = (0x29);
			m_RecvByteMap[102] = (0xAC);
			m_RecvByteMap[103] = (0x4E);
			m_RecvByteMap[104] = (0xF9);
			m_RecvByteMap[105] = (0x92);
			m_RecvByteMap[106] = (0x3A);
			m_RecvByteMap[107] = (0x32);
			m_RecvByteMap[108] = (0x4C);
			m_RecvByteMap[109] = (0xDA);
			m_RecvByteMap[110] = (0x06);
			m_RecvByteMap[111] = (0x5E);
			m_RecvByteMap[112] = (0x00);
			m_RecvByteMap[113] = (0x94);
			m_RecvByteMap[114] = (0x60);
			m_RecvByteMap[115] = (0xEC);
			m_RecvByteMap[116] = (0x17);
			m_RecvByteMap[117] = (0x98);
			m_RecvByteMap[118] = (0xD7);
			m_RecvByteMap[119] = (0x3E);
			m_RecvByteMap[120] = (0xCB);
			m_RecvByteMap[121] = (0x6A);
			m_RecvByteMap[122] = (0xA9);
			m_RecvByteMap[123] = (0xD9);
			m_RecvByteMap[124] = (0x9C);
			m_RecvByteMap[125] = (0xBB);
			m_RecvByteMap[126] = (0x08);
			m_RecvByteMap[127] = (0x8F);
			m_RecvByteMap[128] = (0x40);
			m_RecvByteMap[129] = (0xA0);
			m_RecvByteMap[130] = (0x6F);
			m_RecvByteMap[131] = (0x55);
			m_RecvByteMap[132] = (0x67);
			m_RecvByteMap[133] = (0x87);
			m_RecvByteMap[134] = (0x54);
			m_RecvByteMap[135] = (0x80);
			m_RecvByteMap[136] = (0xB2);
			m_RecvByteMap[137] = (0x36);
			m_RecvByteMap[138] = (0x47);
			m_RecvByteMap[139] = (0x22);
			m_RecvByteMap[140] = (0x44);
			m_RecvByteMap[141] = (0x63);
			m_RecvByteMap[142] = (0x05);
			m_RecvByteMap[143] = (0x6B);
			m_RecvByteMap[144] = (0xF0);
			m_RecvByteMap[145] = (0x0F);
			m_RecvByteMap[146] = (0xC7);
			m_RecvByteMap[147] = (0x90);
			m_RecvByteMap[148] = (0xC5);
			m_RecvByteMap[149] = (0x65);
			m_RecvByteMap[150] = (0xE2);
			m_RecvByteMap[151] = (0x64);
			m_RecvByteMap[152] = (0xFA);
			m_RecvByteMap[153] = (0xD5);
			m_RecvByteMap[154] = (0xDB);
			m_RecvByteMap[155] = (0x12);
			m_RecvByteMap[156] = (0x7A);
			m_RecvByteMap[157] = (0x0E);
			m_RecvByteMap[158] = (0xD8);
			m_RecvByteMap[159] = (0x7E);
			m_RecvByteMap[160] = (0x99);
			m_RecvByteMap[161] = (0xD1);
			m_RecvByteMap[162] = (0xE8);
			m_RecvByteMap[163] = (0xD6);
			m_RecvByteMap[164] = (0x86);
			m_RecvByteMap[165] = (0x27);
			m_RecvByteMap[166] = (0xBF);
			m_RecvByteMap[167] = (0xC1);
			m_RecvByteMap[168] = (0x6E);
			m_RecvByteMap[169] = (0xDE);
			m_RecvByteMap[170] = (0x9A);
			m_RecvByteMap[171] = (0x09);
			m_RecvByteMap[172] = (0x0D);
			m_RecvByteMap[173] = (0xAB);
			m_RecvByteMap[174] = (0xE1);
			m_RecvByteMap[175] = (0x91);
			m_RecvByteMap[176] = (0x56);
			m_RecvByteMap[177] = (0xCD);
			m_RecvByteMap[178] = (0xB3);
			m_RecvByteMap[179] = (0x76);
			m_RecvByteMap[180] = (0x0C);
			m_RecvByteMap[181] = (0xC3);
			m_RecvByteMap[182] = (0xD3);
			m_RecvByteMap[183] = (0x9F);
			m_RecvByteMap[184] = (0x42);
			m_RecvByteMap[185] = (0xB6);
			m_RecvByteMap[186] = (0x9B);
			m_RecvByteMap[187] = (0xE5);
			m_RecvByteMap[188] = (0x23);
			m_RecvByteMap[189] = (0xA7);
			m_RecvByteMap[190] = (0xAD);
			m_RecvByteMap[191] = (0x18);
			m_RecvByteMap[192] = (0xC6);
			m_RecvByteMap[193] = (0xF4);
			m_RecvByteMap[194] = (0xB8);
			m_RecvByteMap[195] = (0xBE);
			m_RecvByteMap[196] = (0x15);
			m_RecvByteMap[197] = (0x43);
			m_RecvByteMap[198] = (0x70);
			m_RecvByteMap[199] = (0xE0);
			m_RecvByteMap[200] = (0xE7);
			m_RecvByteMap[201] = (0xBC);
			m_RecvByteMap[202] = (0xF1);
			m_RecvByteMap[203] = (0xBA);
			m_RecvByteMap[204] = (0xA5);
			m_RecvByteMap[205] = (0xA6);
			m_RecvByteMap[206] = (0x53);
			m_RecvByteMap[207] = (0x75);
			m_RecvByteMap[208] = (0xE4);
			m_RecvByteMap[209] = (0xEB);
			m_RecvByteMap[210] = (0xE6);
			m_RecvByteMap[211] = (0x85);
			m_RecvByteMap[212] = (0x14);
			m_RecvByteMap[213] = (0x48);
			m_RecvByteMap[214] = (0xDD);
			m_RecvByteMap[215] = (0x38);
			m_RecvByteMap[216] = (0x2A);
			m_RecvByteMap[217] = (0xCC);
			m_RecvByteMap[218] = (0x7F);
			m_RecvByteMap[219] = (0xB1);
			m_RecvByteMap[220] = (0xC0);
			m_RecvByteMap[221] = (0x71);
			m_RecvByteMap[222] = (0x96);
			m_RecvByteMap[223] = (0xF8);
			m_RecvByteMap[224] = (0x3F);
			m_RecvByteMap[225] = (0x28);
			m_RecvByteMap[226] = (0xF2);
			m_RecvByteMap[227] = (0x69);
			m_RecvByteMap[228] = (0x74);
			m_RecvByteMap[229] = (0x68);
			m_RecvByteMap[230] = (0xB7);
			m_RecvByteMap[231] = (0xA3);
			m_RecvByteMap[232] = (0x50);
			m_RecvByteMap[233] = (0xD0);
			m_RecvByteMap[234] = (0x79);
			m_RecvByteMap[235] = (0x1D);
			m_RecvByteMap[236] = (0xFC);
			m_RecvByteMap[237] = (0xCE);
			m_RecvByteMap[238] = (0x8A);
			m_RecvByteMap[239] = (0x8D);
			m_RecvByteMap[240] = (0x2E);
			m_RecvByteMap[241] = (0x62);
			m_RecvByteMap[242] = (0x30);
			m_RecvByteMap[243] = (0xEA);
			m_RecvByteMap[244] = (0xED);
			m_RecvByteMap[245] = (0x2B);
			m_RecvByteMap[246] = (0x26);
			m_RecvByteMap[247] = (0xB9);
			m_RecvByteMap[248] = (0x81);
			m_RecvByteMap[249] = (0x7C);
			m_RecvByteMap[250] = (0x46);
			m_RecvByteMap[251] = (0x89);
			m_RecvByteMap[252] = (0x73);
			m_RecvByteMap[253] = (0xA2);
			m_RecvByteMap[254] = (0xF7);
			m_RecvByteMap[255] = (0x72);
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

	public static int EncryptBuffer(byte[] pcbDataBuffer, int nbegin,
			int wDataSize, int[] m_SendByteMap) {

		int cbCheckCode = 0;
		try {
			for (int i = nbegin; i < wDataSize; i++) {
				cbCheckCode += toUnsign(pcbDataBuffer[i]);
				pcbDataBuffer[i] = (byte) MapSendByte(pcbDataBuffer[i],
						m_SendByteMap);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
		return cbCheckCode = ~cbCheckCode + 1;
	}

	public static int CrevasseBuffer(byte[] pcbDataBuffer, int nbegin,
			int wDataSize, int cbCheckCode, int[] m_RecvByteMap) {
		try {
			for (int i = nbegin; i < wDataSize; i++) {
				pcbDataBuffer[i] = (byte) MapRecvByte(pcbDataBuffer[i],
						m_RecvByteMap);
				cbCheckCode += toUnsign(pcbDataBuffer[i]);
				cbCheckCode /= 256;
			}
			if (cbCheckCode != 0) {
				return -1;
			}

			return wDataSize;
		} catch (Exception e) {
			e.printStackTrace();
		}
		return 0;
	}

	public static int MapSendByte(int cbData, int[] m_SendByteMap) {
		try {
			cbData = toUnsign(cbData);
			return m_SendByteMap[cbData];
		} catch (Exception e) {
			e.printStackTrace();
		}
		return 0;
	}

	public static int MapRecvByte(int cbData, int[] m_RecvByteMap) {
		try {
			cbData = toUnsign(cbData);
			return m_RecvByteMap[cbData];
		} catch (Exception e) {
			e.printStackTrace();
		}
		return 0;
	}

	public static int toUnsign(int oldByte) {
		try {
			int ret = 0;
			byte b = (byte) oldByte;
			byte c = 0;
			c = (byte) (b & 0x7f);
			if (b < 0) {
				ret = 128;
			}
			return ret + c;
		} catch (Exception e) {
			e.printStackTrace();
		}
		return 0;
	}
}
